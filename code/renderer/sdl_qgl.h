/*
===========================================================================
Copyright (C) 1999-2005 Id Software, Inc.

This file is part of Quake III Arena source code.

Quake III Arena source code is free software; you can redistribute it
and/or modify it under the terms of the GNU General Public License as
published by the Free Software Foundation; either version 2 of the License,
or (at your option) any later version.

Quake III Arena source code is distributed in the hope that it will be
useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with Foobar; if not, write to the Free Software
Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
===========================================================================
*/

/*
** QGL.H
*/

#ifndef __SDL_QGL_H__
#define __SDL_QGL_H__

#include <SDL3/SDL_opengl.h>
#include <time.h>
#include "..\system\sys_public.h"



//===========================================================================

// Extensions

typedef void (GLAPIENTRY* PFNGLMULTITEXCOORD2FARB)(GLenum target, GLfloat s, GLfloat t);
typedef void (GLAPIENTRY* PFNGLACTIVETEXTUREARB)(GLenum target);
typedef void (GLAPIENTRY* PFNGLCLIENTACTIVETEXTUREARB)(GLenum target);
typedef void (GLAPIENTRY* PFNGLLOCKARRAYSEXT)(GLint first, GLint count);
typedef void (GLAPIENTRY* PFNGLUNLOCKARRAYSEXT)(void);

GLAPI PFNGLMULTITEXCOORD2FARB qglMultiTexCoord2fARB;
GLAPI PFNGLACTIVETEXTUREARB qglActiveTextureARB;
GLAPI PFNGLCLIENTACTIVETEXTUREARB qglClientActiveTextureARB;

GLAPI PFNGLLOCKARRAYSEXT qglLockArraysEXT;
GLAPI PFNGLUNLOCKARRAYSEXT qglUnlockArraysEXT;

//===========================================================================

// OpenGL 1

typedef void (GLAPIENTRY* PFNGLACCUM)(GLenum op, GLfloat value);
typedef void (GLAPIENTRY* PFNGLALPHAFUNC)(GLenum func, GLclampf ref);
typedef GLboolean(GLAPIENTRY* PFNGLARETEXTURESRESIDENT)(GLsizei n, const GLuint* textures, GLboolean* residences);
typedef void (GLAPIENTRY* PFNGLARRAYELEMENT)(GLint i);
typedef void (GLAPIENTRY* PFNGLBEGIN)(GLenum mode);
typedef void (GLAPIENTRY* PFNGLBINDTEXTURE)(GLenum target, GLuint texture);
typedef void (GLAPIENTRY* PFNGLBITMAP)(GLsizei width, GLsizei height, GLfloat xorig, GLfloat yorig, GLfloat xmove, GLfloat ymove, const GLubyte* bitmap);
typedef void (GLAPIENTRY* PFNGLBLENDFUNC)(GLenum sfactor, GLenum dfactor);
typedef void (GLAPIENTRY* PFNGLCALLLIST)(GLuint list);
typedef void (GLAPIENTRY* PFNGLCALLLISTS)(GLsizei n, GLenum type, const GLvoid* lists);
typedef void (GLAPIENTRY* PFNGLCLEAR)(GLbitfield mask);
typedef void (GLAPIENTRY* PFNGLCLEARACCUM)(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
typedef void (GLAPIENTRY* PFNGLCLEARCOLOR)(GLclampf red, GLclampf green, GLclampf blue, GLclampf alpha);
typedef void (GLAPIENTRY* PFNGLCLEARDEPTH)(GLclampd depth);
typedef void (GLAPIENTRY* PFNGLCLEARINDEX)(GLfloat c);
typedef void (GLAPIENTRY* PFNGLCLEARSTENCIL)(GLint s);
typedef void (GLAPIENTRY* PFNGLCLIPPLANE)(GLenum plane, const GLdouble* equation);
typedef void (GLAPIENTRY* PFNGLCOLOR3B)(GLbyte red, GLbyte green, GLbyte blue);
typedef void (GLAPIENTRY* PFNGLCOLOR3BV)(const GLbyte* v);
typedef void (GLAPIENTRY* PFNGLCOLOR3D)(GLdouble red, GLdouble green, GLdouble blue);
typedef void (GLAPIENTRY* PFNGLCOLOR3DV)(const GLdouble* v);
typedef void (GLAPIENTRY* PFNGLCOLOR3F)(GLfloat red, GLfloat green, GLfloat blue);
typedef void (GLAPIENTRY* PFNGLCOLOR3FV)(const GLfloat* v);
typedef void (GLAPIENTRY* PFNGLCOLOR3I)(GLint red, GLint green, GLint blue);
typedef void (GLAPIENTRY* PFNGLCOLOR3IV)(const GLint* v);
typedef void (GLAPIENTRY* PFNGLCOLOR3S)(GLshort red, GLshort green, GLshort blue);
typedef void (GLAPIENTRY* PFNGLCOLOR3SV)(const GLshort* v);
typedef void (GLAPIENTRY* PFNGLCOLOR3UB)(GLubyte red, GLubyte green, GLubyte blue);
typedef void (GLAPIENTRY* PFNGLCOLOR3UBV)(const GLubyte* v);
typedef void (GLAPIENTRY* PFNGLCOLOR3UI)(GLuint red, GLuint green, GLuint blue);
typedef void (GLAPIENTRY* PFNGLCOLOR3UIV)(const GLuint* v);
typedef void (GLAPIENTRY* PFNGLCOLOR3US)(GLushort red, GLushort green, GLushort blue);
typedef void (GLAPIENTRY* PFNGLCOLOR3USV)(const GLushort* v);
typedef void (GLAPIENTRY* PFNGLCOLOR4B)(GLbyte red, GLbyte green, GLbyte blue, GLbyte alpha);
typedef void (GLAPIENTRY* PFNGLCOLOR4BV)(const GLbyte* v);
typedef void (GLAPIENTRY* PFNGLCOLOR4D)(GLdouble red, GLdouble green, GLdouble blue, GLdouble alpha);
typedef void (GLAPIENTRY* PFNGLCOLOR4DV)(const GLdouble* v);
typedef void (GLAPIENTRY* PFNGLCOLOR4F)(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
typedef void (GLAPIENTRY* PFNGLCOLOR4FV)(const GLfloat* v);
typedef void (GLAPIENTRY* PFNGLCOLOR4I)(GLint red, GLint green, GLint blue, GLint alpha);
typedef void (GLAPIENTRY* PFNGLCOLOR4IV)(const GLint* v);
typedef void (GLAPIENTRY* PFNGLCOLOR4S)(GLshort red, GLshort green, GLshort blue, GLshort alpha);
typedef void (GLAPIENTRY* PFNGLCOLOR4SV)(const GLshort* v);
typedef void (GLAPIENTRY* PFNGLCOLOR4UB)(GLubyte red, GLubyte green, GLubyte blue, GLubyte alpha);
typedef void (GLAPIENTRY* PFNGLCOLOR4UBV)(const GLubyte* v);
typedef void (GLAPIENTRY* PFNGLCOLOR4UI)(GLuint red, GLuint green, GLuint blue, GLuint alpha);
typedef void (GLAPIENTRY* PFNGLCOLOR4UIV)(const GLuint* v);
typedef void (GLAPIENTRY* PFNGLCOLOR4US)(GLushort red, GLushort green, GLushort blue, GLushort alpha);
typedef void (GLAPIENTRY* PFNGLCOLOR4USV)(const GLushort* v);
typedef void (GLAPIENTRY* PFNGLCOLORMASK)(GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha);
typedef void (GLAPIENTRY* PFNGLCOLORMATERIAL)(GLenum face, GLenum mode);
typedef void (GLAPIENTRY* PFNGLCOLORPOINTER)(GLint size, GLenum type, GLsizei stride, const GLvoid* pointer);
typedef void (GLAPIENTRY* PFNGLCOPYPIXELS)(GLint x, GLint y, GLsizei width, GLsizei height, GLenum type);
typedef void (GLAPIENTRY* PFNGLCOPYTEXIMAGE1D)(GLenum target, GLint level, GLenum internalFormat, GLint x, GLint y, GLsizei width, GLint border);
typedef void (GLAPIENTRY* PFNGLCOPYTEXIMAGE2D)(GLenum target, GLint level, GLenum internalFormat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);
typedef void (GLAPIENTRY* PFNGLCOPYTEXSUBIMAGE1D)(GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);
typedef void (GLAPIENTRY* PFNGLCOPYTEXSUBIMAGE2D)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);
typedef void (GLAPIENTRY* PFNGLCULLFACE)(GLenum mode);
typedef void (GLAPIENTRY* PFNGLDELETELISTS)(GLuint list, GLsizei range);
typedef void (GLAPIENTRY* PFNGLDELETETEXTURES)(GLsizei n, const GLuint* textures);
typedef void (GLAPIENTRY* PFNGLDEPTHFUNC)(GLenum func);
typedef void (GLAPIENTRY* PFNGLDEPTHMASK)(GLboolean flag);
typedef void (GLAPIENTRY* PFNGLDEPTHRANGE)(GLclampd zNear, GLclampd zFar);
typedef void (GLAPIENTRY* PFNGLDISABLE)(GLenum cap);
typedef void (GLAPIENTRY* PFNGLDISABLECLIENTSTATE)(GLenum array);
typedef void (GLAPIENTRY* PFNGLDRAWARRAYS)(GLenum mode, GLint first, GLsizei count);
typedef void (GLAPIENTRY* PFNGLDRAWBUFFER)(GLenum mode);
typedef void (GLAPIENTRY* PFNGLDRAWELEMENTS)(GLenum mode, GLsizei count, GLenum type, const GLvoid* indices);
typedef void (GLAPIENTRY* PFNGLDRAWPIXELS)(GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid* pixels);
typedef void (GLAPIENTRY* PFNGLEDGEFLAG)(GLboolean flag);
typedef void (GLAPIENTRY* PFNGLEDGEFLAGPOINTER)(GLsizei stride, const GLvoid* pointer);
typedef void (GLAPIENTRY* PFNGLEDGEFLAGV)(const GLboolean* flag);
typedef void (GLAPIENTRY* PFNGLENABLE)(GLenum cap);
typedef void (GLAPIENTRY* PFNGLENABLECLIENTSTATE)(GLenum array);
typedef void (GLAPIENTRY* PFNGLEND)(void);
typedef void (GLAPIENTRY* PFNGLENDLIST)(void);
typedef void (GLAPIENTRY* PFNGLEVALCOORD1D)(GLdouble u);
typedef void (GLAPIENTRY* PFNGLEVALCOORD1DV)(const GLdouble* u);
typedef void (GLAPIENTRY* PFNGLEVALCOORD1F)(GLfloat u);
typedef void (GLAPIENTRY* PFNGLEVALCOORD1FV)(const GLfloat* u);
typedef void (GLAPIENTRY* PFNGLEVALCOORD2D)(GLdouble u, GLdouble v);
typedef void (GLAPIENTRY* PFNGLEVALCOORD2DV)(const GLdouble* u);
typedef void (GLAPIENTRY* PFNGLEVALCOORD2F)(GLfloat u, GLfloat v);
typedef void (GLAPIENTRY* PFNGLEVALCOORD2FV)(const GLfloat* u);
typedef void (GLAPIENTRY* PFNGLEVALMESH1)(GLenum mode, GLint i1, GLint i2);
typedef void (GLAPIENTRY* PFNGLEVALMESH2)(GLenum mode, GLint i1, GLint i2, GLint j1, GLint j2);
typedef void (GLAPIENTRY* PFNGLEVALPOINT1)(GLint i);
typedef void (GLAPIENTRY* PFNGLEVALPOINT2)(GLint i, GLint j);
typedef void (GLAPIENTRY* PFNGLFEEDBACKBUFFER)(GLsizei size, GLenum type, GLfloat* buffer);
typedef void (GLAPIENTRY* PFNGLFINISH)(void);
typedef void (GLAPIENTRY* PFNGLFLUSH)(void);
typedef void (GLAPIENTRY* PFNGLFOGF)(GLenum pname, GLfloat param);
typedef void (GLAPIENTRY* PFNGLFOGFV)(GLenum pname, const GLfloat* params);
typedef void (GLAPIENTRY* PFNGLFOGI)(GLenum pname, GLint param);
typedef void (GLAPIENTRY* PFNGLFOGIV)(GLenum pname, const GLint* params);
typedef void (GLAPIENTRY* PFNGLFRONTFACE)(GLenum mode);
typedef void (GLAPIENTRY* PFNGLFRUSTUM)(GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar);
typedef GLuint(GLAPIENTRY* PFNGENLISTS)(GLsizei range);
typedef void (GLAPIENTRY* PFNGLGENTEXTURES)(GLsizei n, GLuint* textures);
typedef void (GLAPIENTRY* PFNGLGETBOOLEANV)(GLenum pname, GLboolean* params);
typedef void (GLAPIENTRY* PFNGLGETCLIPPLANE)(GLenum plane, GLdouble* equation);
typedef void (GLAPIENTRY* PFNGLGETDOUBLEV)(GLenum pname, GLdouble* params);
typedef GLenum(GLAPIENTRY* PFNGETERROR)(void);
typedef void (GLAPIENTRY* PFNGLGETFLOATV)(GLenum pname, GLfloat* params);
typedef void (GLAPIENTRY* PFNGLGETINTEGERV)(GLenum pname, GLint* params);
typedef void (GLAPIENTRY* PFNGLGETLIGHTFV)(GLenum light, GLenum pname, GLfloat* params);
typedef void (GLAPIENTRY* PFNGLGETLIGHTIV)(GLenum light, GLenum pname, GLint* params);
typedef void (GLAPIENTRY* PFNGLGETMAPDV)(GLenum target, GLenum query, GLdouble* v);
typedef void (GLAPIENTRY* PFNGLGETMAPFV)(GLenum target, GLenum query, GLfloat* v);
typedef void (GLAPIENTRY* PFNGLGETMAPIV)(GLenum target, GLenum query, GLint* v);
typedef void (GLAPIENTRY* PFNGLGETMATERIALFV)(GLenum face, GLenum pname, GLfloat* params);
typedef void (GLAPIENTRY* PFNGLGETMATERIALIV)(GLenum face, GLenum pname, GLint* params);
typedef void (GLAPIENTRY* PFNGLGETPIXELMAPFV)(GLenum map, GLfloat* values);
typedef void (GLAPIENTRY* PFNGLGETPIXELMAPUIV)(GLenum map, GLuint* values);
typedef void (GLAPIENTRY* PFNGLGETPIXELMAPUSV)(GLenum map, GLushort* values);
typedef void (GLAPIENTRY* PFNGLGETPOINTERV)(GLenum pname, GLvoid** params);
typedef void (GLAPIENTRY* PFNGLGETPOLYGONSTIPPLE)(GLubyte* mask);
typedef const GLubyte* (GLAPIENTRY* PFNGLGETSTRING)(GLenum name);
typedef void (GLAPIENTRY* PFNGLGETTEXENVFV)(GLenum target, GLenum pname, GLfloat* params);
typedef void (GLAPIENTRY* PFNGLGETTEXENVIV)(GLenum target, GLenum pname, GLint* params);
typedef void (GLAPIENTRY* PFNGLGETTEXGENDV)(GLenum coord, GLenum pname, GLdouble* params);
typedef void (GLAPIENTRY* PFNGLGETTEXGENFV)(GLenum coord, GLenum pname, GLfloat* params);
typedef void (GLAPIENTRY* PFNGLGETTEXGENIV)(GLenum coord, GLenum pname, GLint* params);
typedef void (GLAPIENTRY* PFNGLGETTEXIMAGE)(GLenum target, GLint level, GLenum format, GLenum type, GLvoid* pixels);
typedef void (GLAPIENTRY* PFNGLGETTEXLEVELPARAMETERFV)(GLenum target, GLint level, GLenum pname, GLfloat* params);
typedef void (GLAPIENTRY* PFNGLGETTEXLEVELPARAMETERIV)(GLenum target, GLint level, GLenum pname, GLint* params);
typedef void (GLAPIENTRY* PFNGLGETTEXPARAMETERFV)(GLenum target, GLenum pname, GLfloat* params);
typedef void (GLAPIENTRY* PFNGLGETTEXPARAMETERIV)(GLenum target, GLenum pname, GLint* params);
typedef void (GLAPIENTRY* PFNGLHINT)(GLenum target, GLenum mode);
typedef void (GLAPIENTRY* PFNGLINDEXMASK)(GLuint mask);
typedef void (GLAPIENTRY* PFNGLINDEXPOINTER)(GLenum type, GLsizei stride, const GLvoid* pointer);
typedef void (GLAPIENTRY* PFNGLINDEXD)(GLdouble c);
typedef void (GLAPIENTRY* PFNGLINDEXDV)(const GLdouble* c);
typedef void (GLAPIENTRY* PFNGLINDEXF)(GLfloat c);
typedef void (GLAPIENTRY* PFNGLINDEXFV)(const GLfloat* c);
typedef void (GLAPIENTRY* PFNGLINDEXI)(GLint c);
typedef void (GLAPIENTRY* PFNGLINDEXIV)(const GLint* c);
typedef void (GLAPIENTRY* PFNGLINDEXS)(GLshort c);
typedef void (GLAPIENTRY* PFNGLINDEXSV)(const GLshort* c);
typedef void (GLAPIENTRY* PFNGLINDEXUB)(GLubyte c);
typedef void (GLAPIENTRY* PFNGLINDEXUBV)(const GLubyte* c);
typedef void (GLAPIENTRY* PFNGLINITNAMES)(void);
typedef void (GLAPIENTRY* PFNGLINTERLEAVEDARRAYS)(GLenum format, GLsizei stride, const GLvoid* pointer);
typedef GLboolean(GLAPIENTRY* PFNISENABLED)(GLenum cap);
typedef GLboolean(GLAPIENTRY* PFNISLIST)(GLuint list);
typedef GLboolean(GLAPIENTRY* PFNISTEXTURE)(GLuint texture);
typedef void (GLAPIENTRY* PFNGLLIGHTMODELF)(GLenum pname, GLfloat param);
typedef void (GLAPIENTRY* PFNGLLIGHTMODELFV)(GLenum pname, const GLfloat* params);
typedef void (GLAPIENTRY* PFNGLLIGHTMODELI)(GLenum pname, GLint param);
typedef void (GLAPIENTRY* PFNGLLIGHTMODELIV)(GLenum pname, const GLint* params);
typedef void (GLAPIENTRY* PFNGLLIGHTF)(GLenum light, GLenum pname, GLfloat param);
typedef void (GLAPIENTRY* PFNGLLIGHTFV)(GLenum light, GLenum pname, const GLfloat* params);
typedef void (GLAPIENTRY* PFNGLLIGHTI)(GLenum light, GLenum pname, GLint param);
typedef void (GLAPIENTRY* PFNGLLIGHTIV)(GLenum light, GLenum pname, const GLint* params);
typedef void (GLAPIENTRY* PFNGLLINESTIPPLE)(GLint factor, GLushort pattern);
typedef void (GLAPIENTRY* PFNGLLINEWIDTH)(GLfloat width);
typedef void (GLAPIENTRY* PFNGLLISTBASE)(GLuint base);
typedef void (GLAPIENTRY* PFNGLLOADIDENTITY)(void);
typedef void (GLAPIENTRY* PFNGLLOADMATRIXD)(const GLdouble* m);
typedef void (GLAPIENTRY* PFNGLLOADMATRIXF)(const GLfloat* m);
typedef void (GLAPIENTRY* PFNGLLOADNAME)(GLuint name);
typedef void (GLAPIENTRY* PFNGLLOGICOP)(GLenum opcode);
typedef void (GLAPIENTRY* PFNGLMAP1D)(GLenum target, GLdouble u1, GLdouble u2, GLint stride, GLint order, const GLdouble* points);
typedef void (GLAPIENTRY* PFNGLMAP1F)(GLenum target, GLfloat u1, GLfloat u2, GLint stride, GLint order, const GLfloat* points);
typedef void (GLAPIENTRY* PFNGLMAP2D)(GLenum target, GLdouble u1, GLdouble u2, GLint ustride, GLint uorder, GLdouble v1, GLdouble v2, GLint vstride, GLint vorder, const GLdouble* points);
typedef void (GLAPIENTRY* PFNGLMAP2F)(GLenum target, GLfloat u1, GLfloat u2, GLint ustride, GLint uorder, GLfloat v1, GLfloat v2, GLint vstride, GLint vorder, const GLfloat* points);
typedef void (GLAPIENTRY* PFNGLMAPGRID1D)(GLint un, GLdouble u1, GLdouble u2);
typedef void (GLAPIENTRY* PFNGLMAPGRID1F)(GLint un, GLfloat u1, GLfloat u2);
typedef void (GLAPIENTRY* PFNGLMAPGRID2D)(GLint un, GLdouble u1, GLdouble u2, GLint vn, GLdouble v1, GLdouble v2);
typedef void (GLAPIENTRY* PFNGLMAPGRID2F)(GLint un, GLfloat u1, GLfloat u2, GLint vn, GLfloat v1, GLfloat v2);
typedef void (GLAPIENTRY* PFNGLMATERIALF)(GLenum face, GLenum pname, GLfloat param);
typedef void (GLAPIENTRY* PFNGLMATERIALFV)(GLenum face, GLenum pname, const GLfloat* params);
typedef void (GLAPIENTRY* PFNGLMATERIALI)(GLenum face, GLenum pname, GLint param);
typedef void (GLAPIENTRY* PFNGLMATERIALIV)(GLenum face, GLenum pname, const GLint* params);
typedef void (GLAPIENTRY* PFNGLMATRIXMODE)(GLenum mode);
typedef void (GLAPIENTRY* PFNGLMULTMATRIXD)(const GLdouble* m);
typedef void (GLAPIENTRY* PFNGLMULTMATRIXF)(const GLfloat* m);
typedef void (GLAPIENTRY* PFNGLNEWLIST)(GLuint list, GLenum mode);
typedef void (GLAPIENTRY* PFNGLNORMAL3B)(GLbyte nx, GLbyte ny, GLbyte nz);
typedef void (GLAPIENTRY* PFNGLNORMAL3BV)(const GLbyte* v);
typedef void (GLAPIENTRY* PFNGLNORMAL3D)(GLdouble nx, GLdouble ny, GLdouble nz);
typedef void (GLAPIENTRY* PFNGLNORMAL3DV)(const GLdouble* v);
typedef void (GLAPIENTRY* PFNGLNORMAL3F)(GLfloat nx, GLfloat ny, GLfloat nz);
typedef void (GLAPIENTRY* PFNGLNORMAL3FV)(const GLfloat* v);
typedef void (GLAPIENTRY* PFNGLNORMAL3I)(GLint nx, GLint ny, GLint nz);
typedef void (GLAPIENTRY* PFNGLNORMAL3IV)(const GLint* v);
typedef void (GLAPIENTRY* PFNGLNORMAL3S)(GLshort nx, GLshort ny, GLshort nz);
typedef void (GLAPIENTRY* PFNGLNORMAL3SV)(const GLshort* v);
typedef void (GLAPIENTRY* PFNGLNORMALPOINTER)(GLenum type, GLsizei stride, const GLvoid* pointer);
typedef void (GLAPIENTRY* PFNGLORTHO)(GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar);
typedef void (GLAPIENTRY* PFNGLPASSTHROUGH)(GLfloat token);
typedef void (GLAPIENTRY* PFNGLPIXELMAPFV)(GLenum map, GLsizei mapsize, const GLfloat* values);
typedef void (GLAPIENTRY* PFNGLPIXELMAPUIV)(GLenum map, GLsizei mapsize, const GLuint* values);
typedef void (GLAPIENTRY* PFNGLPIXELMAPUSV)(GLenum map, GLsizei mapsize, const GLushort* values);
typedef void (GLAPIENTRY* PFNGLPIXELSTOREF)(GLenum pname, GLfloat param);
typedef void (GLAPIENTRY* PFNGLPIXELSTOREI)(GLenum pname, GLint param);
typedef void (GLAPIENTRY* PFNGLPIXELTRANSFERF)(GLenum pname, GLfloat param);
typedef void (GLAPIENTRY* PFNGLPIXELTRANSFERI)(GLenum pname, GLint param);
typedef void (GLAPIENTRY* PFNGLPIXELZOOM)(GLfloat xfactor, GLfloat yfactor);
typedef void (GLAPIENTRY* PFNGLPOINTSIZE)(GLfloat size);
typedef void (GLAPIENTRY* PFNGLPOLYGONMODE)(GLenum face, GLenum mode);
typedef void (GLAPIENTRY* PFNGLPOLYGONOFFSET)(GLfloat factor, GLfloat units);
typedef void (GLAPIENTRY* PFNGLPOLYGONSTIPPLE)(const GLubyte* mask);
typedef void (GLAPIENTRY* PFNGLPOPATTRIB)(void);
typedef void (GLAPIENTRY* PFNGLPOPCLIENTATTRIB)(void);
typedef void (GLAPIENTRY* PFNGLPOPMATRIX)(void);
typedef void (GLAPIENTRY* PFNGLPOPNAME)(void);
typedef void (GLAPIENTRY* PFNGLPRIORITIZETEXTURES)(GLsizei n, const GLuint* textures, const GLclampf* priorities);
typedef void (GLAPIENTRY* PFNGLPUSHATTRIB)(GLbitfield mask);
typedef void (GLAPIENTRY* PFNGLPUSHCLIENTATTRIB)(GLbitfield mask);
typedef void (GLAPIENTRY* PFNGLPUSHMATRIX)(void);
typedef void (GLAPIENTRY* PFNGLPUSHNAME)(GLuint name);
typedef void (GLAPIENTRY* PFNGLRASTERPOS2D)(GLdouble x, GLdouble y);
typedef void (GLAPIENTRY* PFNGLRASTERPOS2DV)(const GLdouble* v);
typedef void (GLAPIENTRY* PFNGLRASTERPOS2F)(GLfloat x, GLfloat y);
typedef void (GLAPIENTRY* PFNGLRASTERPOS2FV)(const GLfloat* v);
typedef void (GLAPIENTRY* PFNGLRASTERPOS2I)(GLint x, GLint y);
typedef void (GLAPIENTRY* PFNGLRASTERPOS2IV)(const GLint* v);
typedef void (GLAPIENTRY* PFNGLRASTERPOS2S)(GLshort x, GLshort y);
typedef void (GLAPIENTRY* PFNGLRASTERPOS2SV)(const GLshort* v);
typedef void (GLAPIENTRY* PFNGLRASTERPOS3D)(GLdouble x, GLdouble y, GLdouble z);
typedef void (GLAPIENTRY* PFNGLRASTERPOS3DV)(const GLdouble* v);
typedef void (GLAPIENTRY* PFNGLRASTERPOS3F)(GLfloat x, GLfloat y, GLfloat z);
typedef void (GLAPIENTRY* PFNGLRASTERPOS3FV)(const GLfloat* v);
typedef void (GLAPIENTRY* PFNGLRASTERPOS3I)(GLint x, GLint y, GLint z);
typedef void (GLAPIENTRY* PFNGLRASTERPOS3IV)(const GLint* v);
typedef void (GLAPIENTRY* PFNGLRASTERPOS3S)(GLshort x, GLshort y, GLshort z);
typedef void (GLAPIENTRY* PFNGLRASTERPOS3SV)(const GLshort* v);
typedef void (GLAPIENTRY* PFNGLRASTERPOS4D)(GLdouble x, GLdouble y, GLdouble z, GLdouble w);
typedef void (GLAPIENTRY* PFNGLRASTERPOS4DV)(const GLdouble* v);
typedef void (GLAPIENTRY* PFNGLRASTERPOS4F)(GLfloat x, GLfloat y, GLfloat z, GLfloat w);
typedef void (GLAPIENTRY* PFNGLRASTERPOS4FV)(const GLfloat* v);
typedef void (GLAPIENTRY* PFNGLRASTERPOS4I)(GLint x, GLint y, GLint z, GLint w);
typedef void (GLAPIENTRY* PFNGLRASTERPOS4IV)(const GLint* v);
typedef void (GLAPIENTRY* PFNGLRASTERPOS4S)(GLshort x, GLshort y, GLshort z, GLshort w);
typedef void (GLAPIENTRY* PFNGLRASTERPOS4SV)(const GLshort* v);
typedef void (GLAPIENTRY* PFNGLREADBUFFER)(GLenum mode);
typedef void (GLAPIENTRY* PFNGLREADPIXELS)(GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLvoid* pixels);
typedef void (GLAPIENTRY* PFNGLRECTD)(GLdouble x1, GLdouble y1, GLdouble x2, GLdouble y2);
typedef void (GLAPIENTRY* PFNGLRECTDV)(const GLdouble* v1, const GLdouble* v2);
typedef void (GLAPIENTRY* PFNGLRECTF)(GLfloat x1, GLfloat y1, GLfloat x2, GLfloat y2);
typedef void (GLAPIENTRY* PFNGLRECTFV)(const GLfloat* v1, const GLfloat* v2);
typedef void (GLAPIENTRY* PFNGLRECTI)(GLint x1, GLint y1, GLint x2, GLint y2);
typedef void (GLAPIENTRY* PFNGLRECTIV)(const GLint* v1, const GLint* v2);
typedef void (GLAPIENTRY* PFNGLRECTS)(GLshort x1, GLshort y1, GLshort x2, GLshort y2);
typedef void (GLAPIENTRY* PFNGLRECTSV)(const GLshort* v1, const GLshort* v2);
typedef GLint(GLAPIENTRY* PFNRENDERMODE)(GLenum mode);
typedef void (GLAPIENTRY* PFNGLROTATED)(GLdouble angle, GLdouble x, GLdouble y, GLdouble z);
typedef void (GLAPIENTRY* PFNGLROTATEF)(GLfloat angle, GLfloat x, GLfloat y, GLfloat z);
typedef void (GLAPIENTRY* PFNGLSCALED)(GLdouble x, GLdouble y, GLdouble z);
typedef void (GLAPIENTRY* PFNGLSCALEF)(GLfloat x, GLfloat y, GLfloat z);
typedef void (GLAPIENTRY* PFNGLSCISSOR)(GLint x, GLint y, GLsizei width, GLsizei height);
typedef void (GLAPIENTRY* PFNGLSELECTBUFFER)(GLsizei size, GLuint* buffer);
typedef void (GLAPIENTRY* PFNGLSHADEMODEL)(GLenum mode);
typedef void (GLAPIENTRY* PFNGLSTENCILFUNC)(GLenum func, GLint ref, GLuint mask);
typedef void (GLAPIENTRY* PFNGLSTENCILMASK)(GLuint mask);
typedef void (GLAPIENTRY* PFNGLSTENCILOP)(GLenum fail, GLenum zfail, GLenum zpass);
typedef void (GLAPIENTRY* PFNGLTEXCOORD1D)(GLdouble s);
typedef void (GLAPIENTRY* PFNGLTEXCOORD1DV)(const GLdouble* v);
typedef void (GLAPIENTRY* PFNGLTEXCOORD1F)(GLfloat s);
typedef void (GLAPIENTRY* PFNGLTEXCOORD1FV)(const GLfloat* v);
typedef void (GLAPIENTRY* PFNGLTEXCOORD1I)(GLint s);
typedef void (GLAPIENTRY* PFNGLTEXCOORD1IV)(const GLint* v);
typedef void (GLAPIENTRY* PFNGLTEXCOORD1S)(GLshort s);
typedef void (GLAPIENTRY* PFNGLTEXCOORD1SV)(const GLshort* v);
typedef void (GLAPIENTRY* PFNGLTEXCOORD2D)(GLdouble s, GLdouble t);
typedef void (GLAPIENTRY* PFNGLTEXCOORD2DV)(const GLdouble* v);
typedef void (GLAPIENTRY* PFNGLTEXCOORD2F)(GLfloat s, GLfloat t);
typedef void (GLAPIENTRY* PFNGLTEXCOORD2FV)(const GLfloat* v);
typedef void (GLAPIENTRY* PFNGLTEXCOORD2I)(GLint s, GLint t);
typedef void (GLAPIENTRY* PFNGLTEXCOORD2IV)(const GLint* v);
typedef void (GLAPIENTRY* PFNGLTEXCOORD2S)(GLshort s, GLshort t);
typedef void (GLAPIENTRY* PFNGLTEXCOORD2SV)(const GLshort* v);
typedef void (GLAPIENTRY* PFNGLTEXCOORD3D)(GLdouble s, GLdouble t, GLdouble r);
typedef void (GLAPIENTRY* PFNGLTEXCOORD3DV)(const GLdouble* v);
typedef void (GLAPIENTRY* PFNGLTEXCOORD3F)(GLfloat s, GLfloat t, GLfloat r);
typedef void (GLAPIENTRY* PFNGLTEXCOORD3FV)(const GLfloat* v);
typedef void (GLAPIENTRY* PFNGLTEXCOORD3I)(GLint s, GLint t, GLint r);
typedef void (GLAPIENTRY* PFNGLTEXCOORD3IV)(const GLint* v);
typedef void (GLAPIENTRY* PFNGLTEXCOORD3S)(GLshort s, GLshort t, GLshort r);
typedef void (GLAPIENTRY* PFNGLTEXCOORD3SV)(const GLshort* v);
typedef void (GLAPIENTRY* PFNGLTEXCOORD4D)(GLdouble s, GLdouble t, GLdouble r, GLdouble q);
typedef void (GLAPIENTRY* PFNGLTEXCOORD4DV)(const GLdouble* v);
typedef void (GLAPIENTRY* PFNGLTEXCOORD4F)(GLfloat s, GLfloat t, GLfloat r, GLfloat q);
typedef void (GLAPIENTRY* PFNGLTEXCOORD4FV)(const GLfloat* v);
typedef void (GLAPIENTRY* PFNGLTEXCOORD4I)(GLint s, GLint t, GLint r, GLint q);
typedef void (GLAPIENTRY* PFNGLTEXCOORD4IV)(const GLint* v);
typedef void (GLAPIENTRY* PFNGLTEXCOORD4S)(GLshort s, GLshort t, GLshort r, GLshort q);
typedef void (GLAPIENTRY* PFNGLTEXCOORD4SV)(const GLshort* v);
typedef void (GLAPIENTRY* PFNGLTEXCOORDPOINTER)(GLint size, GLenum type, GLsizei stride, const GLvoid* pointer);
typedef void (GLAPIENTRY* PFNGLTEXENVF)(GLenum target, GLenum pname, GLfloat param);
typedef void (GLAPIENTRY* PFNGLTEXENVFV)(GLenum target, GLenum pname, const GLfloat* params);
typedef void (GLAPIENTRY* PFNGLTEXENVI)(GLenum target, GLenum pname, GLint param);
typedef void (GLAPIENTRY* PFNGLTEXENVIV)(GLenum target, GLenum pname, const GLint* params);
typedef void (GLAPIENTRY* PFNGLTEXGEND)(GLenum coord, GLenum pname, GLdouble param);
typedef void (GLAPIENTRY* PFNGLTEXGENDV)(GLenum coord, GLenum pname, const GLdouble* params);
typedef void (GLAPIENTRY* PFNGLTEXGENF)(GLenum coord, GLenum pname, GLfloat param);
typedef void (GLAPIENTRY* PFNGLTEXGENFV)(GLenum coord, GLenum pname, const GLfloat* params);
typedef void (GLAPIENTRY* PFNGLTEXGENI)(GLenum coord, GLenum pname, GLint param);
typedef void (GLAPIENTRY* PFNGLTEXGENIV)(GLenum coord, GLenum pname, const GLint* params);
typedef void (GLAPIENTRY* PFNGLTEXIMAGE1D)(GLenum target, GLint level, GLint internalformat, GLsizei width, GLint border, GLenum format, GLenum type, const GLvoid* pixels);
typedef void (GLAPIENTRY* PFNGLTEXIMAGE2D)(GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const GLvoid* pixels);
typedef void (GLAPIENTRY* PFNGLTEXPARAMETERF)(GLenum target, GLenum pname, GLfloat param);
typedef void (GLAPIENTRY* PFNGLTEXPARAMETERFV)(GLenum target, GLenum pname, const GLfloat* params);
typedef void (GLAPIENTRY* PFNGLTEXPARAMETERI)(GLenum target, GLenum pname, GLint param);
typedef void (GLAPIENTRY* PFNGLTEXPARAMETERIV)(GLenum target, GLenum pname, const GLint* params);
typedef void (GLAPIENTRY* PFNGLTEXSUBIMAGE1D)(GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const GLvoid* pixels);
typedef void (GLAPIENTRY* PFNGLTEXSUBIMAGE2D)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid* pixels);
typedef void (GLAPIENTRY* PFNGLTRANSLATED)(GLdouble x, GLdouble y, GLdouble z);
typedef void (GLAPIENTRY* PFNGLTRANSLATEF)(GLfloat x, GLfloat y, GLfloat z);
typedef void (GLAPIENTRY* PFNGLVERTEX2D)(GLdouble x, GLdouble y);
typedef void (GLAPIENTRY* PFNGLVERTEX2DV)(const GLdouble* v);
typedef void (GLAPIENTRY* PFNGLVERTEX2F)(GLfloat x, GLfloat y);
typedef void (GLAPIENTRY* PFNGLVERTEX2FV)(const GLfloat* v);
typedef void (GLAPIENTRY* PFNGLVERTEX2I)(GLint x, GLint y);
typedef void (GLAPIENTRY* PFNGLVERTEX2IV)(const GLint* v);
typedef void (GLAPIENTRY* PFNGLVERTEX2S)(GLshort x, GLshort y);
typedef void (GLAPIENTRY* PFNGLVERTEX2SV)(const GLshort* v);
typedef void (GLAPIENTRY* PFNGLVERTEX3D)(GLdouble x, GLdouble y, GLdouble z);
typedef void (GLAPIENTRY* PFNGLVERTEX3DV)(const GLdouble* v);
typedef void (GLAPIENTRY* PFNGLVERTEX3F)(GLfloat x, GLfloat y, GLfloat z);
typedef void (GLAPIENTRY* PFNGLVERTEX3FV)(const GLfloat* v);
typedef void (GLAPIENTRY* PFNGLVERTEX3I)(GLint x, GLint y, GLint z);
typedef void (GLAPIENTRY* PFNGLVERTEX3IV)(const GLint* v);
typedef void (GLAPIENTRY* PFNGLVERTEX3S)(GLshort x, GLshort y, GLshort z);
typedef void (GLAPIENTRY* PFNGLVERTEX3SV)(const GLshort* v);
typedef void (GLAPIENTRY* PFNGLVERTEX4D)(GLdouble x, GLdouble y, GLdouble z, GLdouble w);
typedef void (GLAPIENTRY* PFNGLVERTEX4DV)(const GLdouble* v);
typedef void (GLAPIENTRY* PFNGLVERTEX4F)(GLfloat x, GLfloat y, GLfloat z, GLfloat w);
typedef void (GLAPIENTRY* PFNGLVERTEX4FV)(const GLfloat* v);
typedef void (GLAPIENTRY* PFNGLVERTEX4I)(GLint x, GLint y, GLint z, GLint w);
typedef void (GLAPIENTRY* PFNGLVERTEX4IV)(const GLint* v);
typedef void (GLAPIENTRY* PFNGLVERTEX4S)(GLshort x, GLshort y, GLshort z, GLshort w);
typedef void (GLAPIENTRY* PFNGLVERTEX4SV)(const GLshort* v);
typedef void (GLAPIENTRY* PFNGLVERTEXPOINTER)(GLint size, GLenum type, GLsizei stride, const GLvoid* pointer);
typedef void (GLAPIENTRY* PFNGLVIEWPORT)(GLint x, GLint y, GLsizei width, GLsizei height);

GLAPI PFNGLACCUM qglAccum;
GLAPI PFNGLALPHAFUNC qglAlphaFunc;
GLAPI PFNGLARETEXTURESRESIDENT qglAreTexturesResident;
GLAPI PFNGLARRAYELEMENT qglArrayElement;
GLAPI PFNGLBEGIN qglBegin;
GLAPI PFNGLBINDTEXTURE qglBindTexture;
GLAPI PFNGLBITMAP qglBitmap;
GLAPI PFNGLBLENDFUNC qglBlendFunc;
GLAPI PFNGLCALLLIST qglCallList;
GLAPI PFNGLCALLLISTS qglCallLists;
GLAPI PFNGLCLEAR qglClear;
GLAPI PFNGLCLEARACCUM qglClearAccum;
GLAPI PFNGLCLEARCOLOR qglClearColor;
GLAPI PFNGLCLEARDEPTH qglClearDepth;
GLAPI PFNGLCLEARINDEX qglClearIndex;
GLAPI PFNGLCLEARSTENCIL qglClearStencil;
GLAPI PFNGLCLIPPLANE qglClipPlane;
GLAPI PFNGLCOLOR3B qglColor3b;
GLAPI PFNGLCOLOR3BV qglColor3bv;
GLAPI PFNGLCOLOR3D qglColor3d;
GLAPI PFNGLCOLOR3DV qglColor3dv;
GLAPI PFNGLCOLOR3F qglColor3f;
GLAPI PFNGLCOLOR3FV qglColor3fv;
GLAPI PFNGLCOLOR3I qglColor3i;
GLAPI PFNGLCOLOR3IV qglColor3iv;
GLAPI PFNGLCOLOR3S qglColor3s;
GLAPI PFNGLCOLOR3SV qglColor3sv;
GLAPI PFNGLCOLOR3UB qglColor3ub;
GLAPI PFNGLCOLOR3UBV qglColor3ubv;
GLAPI PFNGLCOLOR3UI qglColor3ui;
GLAPI PFNGLCOLOR3UIV qglColor3uiv;
GLAPI PFNGLCOLOR3US qglColor3us;
GLAPI PFNGLCOLOR3USV qglColor3usv;
GLAPI PFNGLCOLOR4B qglColor4b;
GLAPI PFNGLCOLOR4BV qglColor4bv;
GLAPI PFNGLCOLOR4D qglColor4d;
GLAPI PFNGLCOLOR4DV qglColor4dv;
GLAPI PFNGLCOLOR4F qglColor4f;
GLAPI PFNGLCOLOR4FV qglColor4fv;
GLAPI PFNGLCOLOR4I qglColor4i;
GLAPI PFNGLCOLOR4IV qglColor4iv;
GLAPI PFNGLCOLOR4S qglColor4s;
GLAPI PFNGLCOLOR4SV qglColor4sv;
GLAPI PFNGLCOLOR4UB qglColor4ub;
GLAPI PFNGLCOLOR4UBV qglColor4ubv;
GLAPI PFNGLCOLOR4UI qglColor4ui;
GLAPI PFNGLCOLOR4UIV qglColor4uiv;
GLAPI PFNGLCOLOR4US qglColor4us;
GLAPI PFNGLCOLOR4USV qglColor4usv;
GLAPI PFNGLCOLORMASK qglColorMask;
GLAPI PFNGLCOLORMATERIAL qglColorMaterial;
GLAPI PFNGLCOLORPOINTER qglColorPointer;
GLAPI PFNGLCOPYPIXELS qglCopyPixels;
GLAPI PFNGLCOPYTEXIMAGE1D qglCopyTexImage1D;
GLAPI PFNGLCOPYTEXIMAGE2D qglCopyTexImage2D;
GLAPI PFNGLCOPYTEXSUBIMAGE1D qglCopyTexSubImage1D;
GLAPI PFNGLCOPYTEXSUBIMAGE2D qglCopyTexSubImage2D;
GLAPI PFNGLCULLFACE qglCullFace;
GLAPI PFNGLDELETELISTS qglDeleteLists;
GLAPI PFNGLDELETETEXTURES qglDeleteTextures;
GLAPI PFNGLDEPTHFUNC qglDepthFunc;
GLAPI PFNGLDEPTHMASK qglDepthMask;
GLAPI PFNGLDEPTHRANGE qglDepthRange;
GLAPI PFNGLDISABLE qglDisable;
GLAPI PFNGLDISABLECLIENTSTATE qglDisableClientState;
GLAPI PFNGLDRAWARRAYS qglDrawArrays;
GLAPI PFNGLDRAWBUFFER qglDrawBuffer;
GLAPI PFNGLDRAWELEMENTS qglDrawElements;
GLAPI PFNGLDRAWPIXELS qglDrawPixels;
GLAPI PFNGLEDGEFLAG qglEdgeFlag;
GLAPI PFNGLEDGEFLAGPOINTER qglEdgeFlagPointer;
GLAPI PFNGLEDGEFLAGV qglEdgeFlagv;
GLAPI PFNGLENABLE qglEnable;
GLAPI PFNGLENABLECLIENTSTATE qglEnableClientState;
GLAPI PFNGLEND qglEnd;
GLAPI PFNGLENDLIST qglEndList;
GLAPI PFNGLEVALCOORD1D qglEvalCoord1d;
GLAPI PFNGLEVALCOORD1DV qglEvalCoord1dv;
GLAPI PFNGLEVALCOORD1F qglEvalCoord1f;
GLAPI PFNGLEVALCOORD1FV qglEvalCoord1fv;
GLAPI PFNGLEVALCOORD2D qglEvalCoord2d;
GLAPI PFNGLEVALCOORD2DV qglEvalCoord2dv;
GLAPI PFNGLEVALCOORD2F qglEvalCoord2f;
GLAPI PFNGLEVALCOORD2FV qglEvalCoord2fv;
GLAPI PFNGLEVALMESH1 qglEvalMesh1;
GLAPI PFNGLEVALMESH2 qglEvalMesh2;
GLAPI PFNGLEVALPOINT1 qglEvalPoint1;
GLAPI PFNGLEVALPOINT2 qglEvalPoint2;
GLAPI PFNGLFEEDBACKBUFFER qglFeedbackBuffer;
GLAPI PFNGLFINISH qglFinish;
GLAPI PFNGLFLUSH qglFlush;
GLAPI PFNGLFOGF qglFogf;
GLAPI PFNGLFOGFV qglFogfv;
GLAPI PFNGLFOGI qglFogi;
GLAPI PFNGLFOGIV qglFogiv;
GLAPI PFNGLFRONTFACE qglFrontFace;
GLAPI PFNGLFRUSTUM qglFrustum;
GLAPI PFNGENLISTS qglGenLists;
GLAPI PFNGLGENTEXTURES qglGenTextures;
GLAPI PFNGLGETBOOLEANV qglGetBooleanv;
GLAPI PFNGLGETCLIPPLANE qglGetClipPlane;
GLAPI PFNGLGETDOUBLEV qglGetDoublev;
GLAPI PFNGETERROR qglGetError;
GLAPI PFNGLGETFLOATV qglGetFloatv;
GLAPI PFNGLGETINTEGERV qglGetIntegerv;
GLAPI PFNGLGETLIGHTFV qglGetLightfv;
GLAPI PFNGLGETLIGHTIV qglGetLightiv;
GLAPI PFNGLGETMAPDV qglGetMapdv;
GLAPI PFNGLGETMAPFV qglGetMapfv;
GLAPI PFNGLGETMAPIV qglGetMapiv;
GLAPI PFNGLGETMATERIALFV qglGetMaterialfv;
GLAPI PFNGLGETMATERIALIV qglGetMaterialiv;
GLAPI PFNGLGETPIXELMAPFV qglGetPixelMapfv;
GLAPI PFNGLGETPIXELMAPUIV qglGetPixelMapuiv;
GLAPI PFNGLGETPIXELMAPUSV qglGetPixelMapusv;
GLAPI PFNGLGETPOINTERV qglGetPointerv;
GLAPI PFNGLGETPOLYGONSTIPPLE qglGetPolygonStipple;
GLAPI PFNGLGETSTRING qglGetString;
GLAPI PFNGLGETTEXENVFV qglGetTexEnvfv;
GLAPI PFNGLGETTEXENVIV qglGetTexEnviv;
GLAPI PFNGLGETTEXGENDV qglGetTexGendv;
GLAPI PFNGLGETTEXGENFV qglGetTexGenfv;
GLAPI PFNGLGETTEXGENIV qglGetTexGeniv;
GLAPI PFNGLGETTEXIMAGE qglGetTexImage;
GLAPI PFNGLGETTEXLEVELPARAMETERFV qglGetTexLevelParameterfv;
GLAPI PFNGLGETTEXLEVELPARAMETERIV qglGetTexLevelParameteriv;
GLAPI PFNGLGETTEXPARAMETERFV qglGetTexParameterfv;
GLAPI PFNGLGETTEXPARAMETERIV qglGetTexParameteriv;
GLAPI PFNGLHINT qglHint;
GLAPI PFNGLINDEXMASK qglIndexMask;
GLAPI PFNGLINDEXPOINTER qglIndexPointer;
GLAPI PFNGLINDEXD qglIndexd;
GLAPI PFNGLINDEXDV qglIndexdv;
GLAPI PFNGLINDEXF qglIndexf;
GLAPI PFNGLINDEXFV qglIndexfv;
GLAPI PFNGLINDEXI qglIndexi;
GLAPI PFNGLINDEXIV qglIndexiv;
GLAPI PFNGLINDEXS qglIndexs;
GLAPI PFNGLINDEXSV qglIndexsv;
GLAPI PFNGLINDEXUB qglIndexub;
GLAPI PFNGLINDEXUBV qglIndexubv;
GLAPI PFNGLINITNAMES qglInitNames;
GLAPI PFNGLINTERLEAVEDARRAYS qglInterleavedArrays;
GLAPI PFNISENABLED qglIsEnabled;
GLAPI PFNISLIST qglIsList;
GLAPI PFNISTEXTURE qglIsTexture;
GLAPI PFNGLLIGHTMODELF qglLightModelf;
GLAPI PFNGLLIGHTMODELFV qglLightModelfv;
GLAPI PFNGLLIGHTMODELI qglLightModeli;
GLAPI PFNGLLIGHTMODELIV qglLightModeliv;
GLAPI PFNGLLIGHTF qglLightf;
GLAPI PFNGLLIGHTFV qglLightfv;
GLAPI PFNGLLIGHTI qglLighti;
GLAPI PFNGLLIGHTIV qglLightiv;
GLAPI PFNGLLINESTIPPLE qglLineStipple;
GLAPI PFNGLLINEWIDTH qglLineWidth;
GLAPI PFNGLLISTBASE qglListBase;
GLAPI PFNGLLOADIDENTITY qglLoadIdentity;
GLAPI PFNGLLOADMATRIXD qglLoadMatrixd;
GLAPI PFNGLLOADMATRIXF qglLoadMatrixf;
GLAPI PFNGLLOADNAME qglLoadName;
GLAPI PFNGLLOGICOP qglLogicOp;
GLAPI PFNGLMAP1D qglMap1d;
GLAPI PFNGLMAP1F qglMap1f;
GLAPI PFNGLMAP2D qglMap2d;
GLAPI PFNGLMAP2F qglMap2f;
GLAPI PFNGLMAPGRID1D qglMapGrid1d;
GLAPI PFNGLMAPGRID1F qglMapGrid1f;
GLAPI PFNGLMAPGRID2D qglMapGrid2d;
GLAPI PFNGLMAPGRID2F qglMapGrid2f;
GLAPI PFNGLMATERIALF qglMaterialf;
GLAPI PFNGLMATERIALFV qglMaterialfv;
GLAPI PFNGLMATERIALI qglMateriali;
GLAPI PFNGLMATERIALIV qglMaterialiv;
GLAPI PFNGLMATRIXMODE qglMatrixMode;
GLAPI PFNGLMULTMATRIXD qglMultMatrixd;
GLAPI PFNGLMULTMATRIXF qglMultMatrixf;
GLAPI PFNGLNEWLIST qglNewList;
GLAPI PFNGLNORMAL3B qglNormal3b;
GLAPI PFNGLNORMAL3BV qglNormal3bv;
GLAPI PFNGLNORMAL3D qglNormal3d;
GLAPI PFNGLNORMAL3DV qglNormal3dv;
GLAPI PFNGLNORMAL3F qglNormal3f;
GLAPI PFNGLNORMAL3FV qglNormal3fv;
GLAPI PFNGLNORMAL3I qglNormal3i;
GLAPI PFNGLNORMAL3IV qglNormal3iv;
GLAPI PFNGLNORMAL3S qglNormal3s;
GLAPI PFNGLNORMAL3SV qglNormal3sv;
GLAPI PFNGLNORMALPOINTER qglNormalPointer;
GLAPI PFNGLORTHO qglOrtho;
GLAPI PFNGLPASSTHROUGH qglPassThrough;
GLAPI PFNGLPIXELMAPFV qglPixelMapfv;
GLAPI PFNGLPIXELMAPUIV qglPixelMapuiv;
GLAPI PFNGLPIXELMAPUSV qglPixelMapusv;
GLAPI PFNGLPIXELSTOREF qglPixelStoref;
GLAPI PFNGLPIXELSTOREI qglPixelStorei;
GLAPI PFNGLPIXELTRANSFERF qglPixelTransferf;
GLAPI PFNGLPIXELTRANSFERI qglPixelTransferi;
GLAPI PFNGLPIXELZOOM qglPixelZoom;
GLAPI PFNGLPOINTSIZE qglPointSize;
GLAPI PFNGLPOLYGONMODE qglPolygonMode;
GLAPI PFNGLPOLYGONOFFSET qglPolygonOffset;
GLAPI PFNGLPOLYGONSTIPPLE qglPolygonStipple;
GLAPI PFNGLPOPATTRIB qglPopAttrib;
GLAPI PFNGLPOPCLIENTATTRIB qglPopClientAttrib;
GLAPI PFNGLPOPMATRIX qglPopMatrix;
GLAPI PFNGLPOPNAME qglPopName;
GLAPI PFNGLPRIORITIZETEXTURES qglPrioritizeTextures;
GLAPI PFNGLPUSHATTRIB qglPushAttrib;
GLAPI PFNGLPUSHCLIENTATTRIB qglPushClientAttrib;
GLAPI PFNGLPUSHMATRIX qglPushMatrix;
GLAPI PFNGLPUSHNAME qglPushName;
GLAPI PFNGLRASTERPOS2D qglRasterPos2d;
GLAPI PFNGLRASTERPOS2DV qglRasterPos2dv;
GLAPI PFNGLRASTERPOS2F qglRasterPos2f;
GLAPI PFNGLRASTERPOS2FV qglRasterPos2fv;
GLAPI PFNGLRASTERPOS2I qglRasterPos2i;
GLAPI PFNGLRASTERPOS2IV qglRasterPos2iv;
GLAPI PFNGLRASTERPOS2S qglRasterPos2s;
GLAPI PFNGLRASTERPOS2SV qglRasterPos2sv;
GLAPI PFNGLRASTERPOS3D qglRasterPos3d;
GLAPI PFNGLRASTERPOS3DV qglRasterPos3dv;
GLAPI PFNGLRASTERPOS3F qglRasterPos3f;
GLAPI PFNGLRASTERPOS3FV qglRasterPos3fv;
GLAPI PFNGLRASTERPOS3I qglRasterPos3i;
GLAPI PFNGLRASTERPOS3IV qglRasterPos3iv;
GLAPI PFNGLRASTERPOS3S qglRasterPos3s;
GLAPI PFNGLRASTERPOS3SV qglRasterPos3sv;
GLAPI PFNGLRASTERPOS4D qglRasterPos4d;
GLAPI PFNGLRASTERPOS4DV qglRasterPos4dv;
GLAPI PFNGLRASTERPOS4F qglRasterPos4f;
GLAPI PFNGLRASTERPOS4FV qglRasterPos4fv;
GLAPI PFNGLRASTERPOS4I qglRasterPos4i;
GLAPI PFNGLRASTERPOS4IV qglRasterPos4iv;
GLAPI PFNGLRASTERPOS4S qglRasterPos4s;
GLAPI PFNGLRASTERPOS4SV qglRasterPos4sv;
GLAPI PFNGLREADBUFFER qglReadBuffer;
GLAPI PFNGLREADPIXELS qglReadPixels;
GLAPI PFNGLRECTD qglRectd;
GLAPI PFNGLRECTDV qglRectdv;
GLAPI PFNGLRECTF qglRectf;
GLAPI PFNGLRECTFV qglRectfv;
GLAPI PFNGLRECTI qglRecti;
GLAPI PFNGLRECTIV qglRectiv;
GLAPI PFNGLRECTS qglRects;
GLAPI PFNGLRECTSV qglRectsv;
GLAPI PFNRENDERMODE qglRenderMode;
GLAPI PFNGLROTATED qglRotated;
GLAPI PFNGLROTATEF qglRotatef;
GLAPI PFNGLSCALED qglScaled;
GLAPI PFNGLSCALEF qglScalef;
GLAPI PFNGLSCISSOR qglScissor;
GLAPI PFNGLSELECTBUFFER qglSelectBuffer;
GLAPI PFNGLSHADEMODEL qglShadeModel;
GLAPI PFNGLSTENCILFUNC qglStencilFunc;
GLAPI PFNGLSTENCILMASK qglStencilMask;
GLAPI PFNGLSTENCILOP qglStencilOp;
GLAPI PFNGLTEXCOORD1D qglTexCoord1d;
GLAPI PFNGLTEXCOORD1DV qglTexCoord1dv;
GLAPI PFNGLTEXCOORD1F qglTexCoord1f;
GLAPI PFNGLTEXCOORD1FV qglTexCoord1fv;
GLAPI PFNGLTEXCOORD1I qglTexCoord1i;
GLAPI PFNGLTEXCOORD1IV qglTexCoord1iv;
GLAPI PFNGLTEXCOORD1S qglTexCoord1s;
GLAPI PFNGLTEXCOORD1SV qglTexCoord1sv;
GLAPI PFNGLTEXCOORD2D qglTexCoord2d;
GLAPI PFNGLTEXCOORD2DV qglTexCoord2dv;
GLAPI PFNGLTEXCOORD2F qglTexCoord2f;
GLAPI PFNGLTEXCOORD2FV qglTexCoord2fv;
GLAPI PFNGLTEXCOORD2I qglTexCoord2i;
GLAPI PFNGLTEXCOORD2IV qglTexCoord2iv;
GLAPI PFNGLTEXCOORD2S qglTexCoord2s;
GLAPI PFNGLTEXCOORD2SV qglTexCoord2sv;
GLAPI PFNGLTEXCOORD3D qglTexCoord3d;
GLAPI PFNGLTEXCOORD3DV qglTexCoord3dv;
GLAPI PFNGLTEXCOORD3F qglTexCoord3f;
GLAPI PFNGLTEXCOORD3FV qglTexCoord3fv;
GLAPI PFNGLTEXCOORD3I qglTexCoord3i;
GLAPI PFNGLTEXCOORD3IV qglTexCoord3iv;
GLAPI PFNGLTEXCOORD3S qglTexCoord3s;
GLAPI PFNGLTEXCOORD3SV qglTexCoord3sv;
GLAPI PFNGLTEXCOORD4D qglTexCoord4d;
GLAPI PFNGLTEXCOORD4DV qglTexCoord4dv;
GLAPI PFNGLTEXCOORD4F qglTexCoord4f;
GLAPI PFNGLTEXCOORD4FV qglTexCoord4fv;
GLAPI PFNGLTEXCOORD4I qglTexCoord4i;
GLAPI PFNGLTEXCOORD4IV qglTexCoord4iv;
GLAPI PFNGLTEXCOORD4S qglTexCoord4s;
GLAPI PFNGLTEXCOORD4SV qglTexCoord4sv;
GLAPI PFNGLTEXCOORDPOINTER qglTexCoordPointer;
GLAPI PFNGLTEXENVF qglTexEnvf;
GLAPI PFNGLTEXENVFV qglTexEnvfv;
GLAPI PFNGLTEXENVI qglTexEnvi;
GLAPI PFNGLTEXENVIV qglTexEnviv;
GLAPI PFNGLTEXGEND qglTexGend;
GLAPI PFNGLTEXGENDV qglTexGendv;
GLAPI PFNGLTEXGENF qglTexGenf;
GLAPI PFNGLTEXGENFV qglTexGenfv;
GLAPI PFNGLTEXGENI qglTexGeni;
GLAPI PFNGLTEXGENIV qglTexGeniv;
GLAPI PFNGLTEXIMAGE1D qglTexImage1D;
GLAPI PFNGLTEXIMAGE2D qglTexImage2D;
GLAPI PFNGLTEXPARAMETERF qglTexParameterf;
GLAPI PFNGLTEXPARAMETERFV qglTexParameterfv;
GLAPI PFNGLTEXPARAMETERI qglTexParameteri;
GLAPI PFNGLTEXPARAMETERIV qglTexParameteriv;
GLAPI PFNGLTEXSUBIMAGE1D qglTexSubImage1D;
GLAPI PFNGLTEXSUBIMAGE2D qglTexSubImage2D;
GLAPI PFNGLTRANSLATED qglTranslated;
GLAPI PFNGLTRANSLATEF qglTranslatef;
GLAPI PFNGLVERTEX2D qglVertex2d;
GLAPI PFNGLVERTEX2DV qglVertex2dv;
GLAPI PFNGLVERTEX2F qglVertex2f;
GLAPI PFNGLVERTEX2FV qglVertex2fv;
GLAPI PFNGLVERTEX2I qglVertex2i;
GLAPI PFNGLVERTEX2IV qglVertex2iv;
GLAPI PFNGLVERTEX2S qglVertex2s;
GLAPI PFNGLVERTEX2SV qglVertex2sv;
GLAPI PFNGLVERTEX3D qglVertex3d;
GLAPI PFNGLVERTEX3DV qglVertex3dv;
GLAPI PFNGLVERTEX3F qglVertex3f;
GLAPI PFNGLVERTEX3FV qglVertex3fv;
GLAPI PFNGLVERTEX3I qglVertex3i;
GLAPI PFNGLVERTEX3IV qglVertex3iv;
GLAPI PFNGLVERTEX3S qglVertex3s;
GLAPI PFNGLVERTEX3SV qglVertex3sv;
GLAPI PFNGLVERTEX4D qglVertex4d;
GLAPI PFNGLVERTEX4DV qglVertex4dv;
GLAPI PFNGLVERTEX4F qglVertex4f;
GLAPI PFNGLVERTEX4FV qglVertex4fv;
GLAPI PFNGLVERTEX4I qglVertex4i;
GLAPI PFNGLVERTEX4IV qglVertex4iv;
GLAPI PFNGLVERTEX4S qglVertex4s;
GLAPI PFNGLVERTEX4SV qglVertex4sv;
GLAPI PFNGLVERTEXPOINTER qglVertexPointer;
GLAPI PFNGLVIEWPORT qglViewport;

#endif // #ifndef __SDL_QGL_H__
